<?php

namespace {{ namespace }};

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use {{ model_namespace }};

class {{ controller }} extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $data = {{ modelName }}::all();

        return view('{{ path }}.index', compact('data'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('{{ path }}.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        
        $request->validate([
{{ field_validate }}    
        ]);

        {{ modelName }}::create([
{{ field_data }}
        ]);

        notify()->success(__( '{{ notify }}.notify.create' ), __( '{{ notify }}.notify.common.create' ) );
        return back();
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $data = {{ modelName }}::findOrFail($id);
        return view('{{ path }}.show', compact('data'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $data = {{ modelName }}::findOrFail($id);
        return view('{{ path }}.edit', compact('data'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {

        $request->validate([
{{ field_validate }}    
        ]);

        {{ modelName }}::where('id', $id)->update([
{{ field_data }}
        ]);
        
        notify()->success(__( '{{ notify }}.notify.edit' ), __( '{{ notify }}.notify.common.edit' ) );

        return back();
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id = null)
    {
        if($id != null ){
            $data = {{ modelName }}::findOrFail($id);

            if($data == null){
                $data->delete();
            }
        }

        $ids = request()->input('ids');
        if($id == null && $ids ){
            $data = {{ modelName }}::whereIn('id', $ids)->get();
            foreach($data as $d){
                $d->delete();
            }
        }

        notify()->success(__( '{{ notify }}.notify.delete' ), __( '{{ notify }}.notify.common.delete' ) );
        return back();
    }
}
